generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                String         @id @default(cuid())
  username          String         @unique  // Username único
  name              String
  birthDate         DateTime       // Data de nascimento
  password          String
  securityQuestion  String         // Pergunta de segurança obrigatória
  securityAnswer    String         // Resposta criptografada
  incomes           Income[]
  creditCards       CreditCard[]
  subscriptions     Subscription[]
  services          Service[]
  transactions      Transaction[]
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt

  @@map("users")
}

model Income {
  id              String   @id @default(cuid())
  description     String
  amount          Float
  date            DateTime
  monthReference  String   @default("2025-06")
  userId          String
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt       DateTime @default(now())

  @@map("incomes")
}

model CreditCard {
  id              String        @id @default(cuid())
  name            String
  limit           Float
  currentDebt     Float
  dueDate         Int
  monthReference  String        @default("2025-06")
  userId          String
  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions    Transaction[]
  createdAt       DateTime      @default(now())

  @@map("credit_cards")
}

model Subscription {
  id              String   @id @default(cuid())
  name            String
  amount          Float
  renewalDate     DateTime
  category        String
  monthReference  String   @default("2025-06")
  userId          String
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt       DateTime @default(now())

  @@map("subscriptions")
}

model Service {
  id              String   @id @default(cuid())
  name            String
  amount          Float
  dueDate         Int
  category        String
  monthReference  String   @default("2025-06")
  userId          String
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt       DateTime @default(now())

  @@map("services")
}

model Transaction {
  id           String      @id @default(cuid())
  description  String
  amount       Float
  type         String
  category     String?
  date         DateTime
  userId       String
  user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  creditCardId String?
  creditCard   CreditCard? @relation(fields: [creditCardId], references: [id], onDelete: SetNull)
  createdAt    DateTime    @default(now())

  @@map("transactions")
}
